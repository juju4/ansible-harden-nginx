---

hardenwebserver_disable_http: false
hardenwebserver_http_redirect_to_https: true
## set to true if your https config is coming from another role
##  in this case role 'https' config will be installed but not enabled
hardenwebserver_https_noconfig: false
hardenwebserver_https_template: https.j2
hardenwebserver_nginx_https_server_include: []
#  - { name: service, src: template_filename.j2 }
# if 'location /' is used in one included file
hardennginx_https_rootlocation: true

hardenwebserver_nginx_with_log_json: false

## curl, wget, perl...
hardenwebserver_block_downloadagents: false
hardenwebserver_cachecontrol: false
hardenwebserver_block_emptyua: true

hardenwebserver_nginx_systemd_hardening: true
hardenwebserver_systemd_dir_acl:
  - { p: "/etc/ssl/private", perm: rx, m: '0750' }
  - { p: /etc/letsencrypt/archive, perm: rx, m: '0700' }
  - { p: /etc/letsencrypt/live, perm: rx, m: '0700' }
  - { p: "/var/log/nginx", perm: rwx, m: '0755' }
hardenwebserver_systemd_files_acl:
  - { p: "/etc/ssl/private/{{ ansible_fqdn }}.key", perm: r }
#  - { p: "/etc/letsencrypt/archive/{{ ansible_fqdn }}/privkey1.pem", perm: r }

## if defined, restrict webserver listen interface (only support one interface)
# hardenwebserver_bind: 192.168.1.1

harden_nginx_https_listen: '[::]'
hardenwebserver_cert: selfsigned
hardenwebserver_certinfo: '/C=US/ST=CA/L=San Francisco/O=Ansible'
hardenwebserver_certduration: 1095
# if get issue, between ansible_fqdn, ansible_hostname...
hardenwebserver_target_host_cn: "{{ ansible_fqdn }}"
## Ansible v2.2 module. will use hostname fqdn. REQUIRE publicly accessible host w public domain
# hardenwebserver_cert: letsencrypt
# path on orchestrator, if empty will be created
hardenwebserver_letsencrypt_user_key: ''
hardenwebserver_letsencrypt_org_name: Webserver by Ansible
hardenwebserver_letsencrypt_email: john@example.com
hardenwebserver_letsencrypt_country: US
hardenwebserver_acme_validate_certs: true
hardenwebserver_acme_download_root_ca: false
hardenwebserver_acme_download_root_ca_url: https://example.com/roots.pem
# Note: san for step-ca command should be without 'DNS:' or 'IP:' else seen as 'URI:'
#   `echo | openssl s_client -connect HOST:443 -showcerts | openssl x509 -noout -text`
hardenwebserver_target_host_san: []
## staging or production url
# hardenwebserver_letsencrypt_acme_dir: 'https://acme-staging.api.letsencrypt.org/directory'
# hardenwebserver_letsencrypt_acme_dir: 'https://acme-v01.api.letsencrypt.org/directory'
hardenwebserver_letsencrypt_acme_dir: 'https://acme-staging-v02.api.letsencrypt.org/directory'
# hardenwebserver_letsencrypt_acme_dir: 'https://acme-v02.api.letsencrypt.org/directory'
harden_nginx_hpkp_enable: false
# hardenwebserver_cert: certbot
certbot_args: "-m {{ hardenwebserver_letsencrypt_email }} --agree-tos --domains {{ ansible_fqdn }}"
# certbot_args: "--register-unsafely-without-email --agree-tos --domains {{ ansible_fqdn }}"
# hardenwebserver_cert: stepca
hardenwebserver_stepca_host: stepcaserver
stepca_pass_file: /tmp/provisioner_password
stepca_host_provisioner_passfile: /tmp/provisioner_password
stepca_args: '--ca-url=https://localhost:8443 --root=/var/lib/step/.step/certs/root_ca.crt --san=localhost --san=127.0.0.1 --san=::1'
# this will force issue a certificate even if one exists (file existence, expired or not)
hardenwebserver_stepca_force_issue: false
hardenwebserver_stepcarenew_args: '--ca-url=https://localhost:8443 --root=/var/lib/step/.step/certs/root_ca.crt'
hardenwebserver_stepcarenew_debug: false
# if stepca server is behind reverse proxy at L7
# hardenwebserver_stepcarenew_args: '--ca-url=https://localhost:8443 --root=/var/lib/step/.step/certs/root_ca.crt --mtls=false'

# hardenwebserver_nginx_resolver: '$DNS-IP-1 $DNS-IP-2'
## example: Google, OpenDNS, Dyn DNS servers
# hardenwebserver_nginx_resolver: '8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 216.146.35.35 216.146.36.36'

hardenwebserver_cert_pinning: false
hardenwebserver_cert_pinning_value: 'pin-sha256=\"xxxx\"; pin-sha256=\"yyyy\"; max-age=5184000; includeSubDomains'

hardenwebserver_nginx_sessiontickets: false

# hardenwebserver_nginx_debian_pkg: 'nginx-full'
## Note: nginx-light --without-http_limit_req_module
hardenwebserver_nginx_debian_pkg: 'nginx-light'
hardenwebserver_nginx_naxsi_learningmode: true
hardenwebserver_nginx_with_fastcgi: false

## https://content-security-policy.com/
## https://githubengineering.com/githubs-post-csp-journey/
## https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
# hardenwebserver_header_csp: "default-src self"
hardenwebserver_header_csp: "default-src 'none'; script-src 'self' 'report-sample'; connect-src 'self'; img-src 'self'; style-src 'self'; base-uri 'none'; frame-ancestors 'none'; form-action 'self'; upgrade-insecure-requests; report-uri /csp/report.php;"
# hardenwebserver_header_csp: "default-src 'none'; script-src 'self www.google-analytics.com ajax.googleapis.com'; connect-src 'self'; img-src 'self'; style-src 'self';"
# hardenwebserver_header_csp: "default-src 'none'; script-src 'self www.google-analytics.com ajax.googleapis.com'; connect-src 'self'; img-src 'self'; style-src 'self'; report-uri https://xxxx.report-uri.io/r/default/csp/enforce"
# hardenwebserver_header_csp: "default-src 'none'; script-src 'self www.google-analytics.com ajax.googleapis.com'; connect-src 'self'; img-src 'self'; style-src 'self'; report-uri-report-only https://xxxx.report-uri.io/r/default/csp/reportOnly"
harden_nginx_cspreport_template: csp-hotline.php.j2
hardenwebserver_header_expectct: 'max-age=0, report-uri,report-uri=/csp/report.php'

## https://scotthelme.co.uk/a-new-security-header-referrer-policy/
harden_webserver_header_refpolicy: strict-origin-when-cross-origin
# harden_webserver_header_refpolicy: no-referrer-when-downgrade

## https://cipherli.st/
## https://wiki.mozilla.org/Security/Server_Side_TLS
## https://wiki.mozilla.org/Security/TLS_Configurations
## https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html
## https://openweb.eu.org/articles/https-de-ssl-a-tls-1-3
## https://www.ssi.gouv.fr/uploads/2017/02/security-recommendations-for-tls_v1.1.pdf
## https://bettercrypto.org/static/applied-crypto-hardening.pdf
harden_nginx_sslciphersuite: 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH'
# harden_nginx_sslciphersuite: 'ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS'
harden_nginx_sslprotocol: 'TLSv1.3'
# harden_nginx_sslprotocol: 'TLSv1.2 TLSv1.1'

## review php settings?
harden_nginx_php_enable: true
harden_php_date_timezone: UTC
harden_php_expose_php: 'Off'
harden_php_allow_url_fopen: 'Off'
harden_php_disable_functions: 'pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,chown,diskfreespace,disk_free_space,disk_total_space,dl,exec,escapeshellarg,escapeshellcmd,fileinode,highlight_file,max_execution_time,passthru,pclose,phpinfo,popen,proc_close,proc_open,proc_get_status,proc_nice,proc_open,proc_terminate,set_time_limit,shell_exec,show_source,system,serialize,unserialize,__construct, __destruct, __call,__wakeup,assert'
harden_php_memory_limit: 128M
harden_php_include_path: '/usr/share/php'
harden_php_session_use_strict_mode: 1
harden_php_session_cookie_secure: true
harden_php_session_cookie_httponly: true
harden_php_openbasedir: 'none'
# harden_php_openbasedir: '/var/www:/dev/urandom:/var/run/mysqld/mysqld.sock'
# Adapt systemd hardening if php-curl is used
# (but not installing module)
hardenwebserver_php_curl_enable: false

# https://www.ietf.org/id/draft-foudil-securitytxt-00.txt
harden_nginx_securitytxt_template: security.txt.j2

harden_nginx_client_max_body_size: 5m
harden_nginx_client_body_buffer_size: 10k

hardennginx_fail2ban_enable: true
hardennginx_etc_hosts_update: false

# Multi sites/certificates?
hardenwebserver_sites: []
# hardenwebserver_sites:
#   - server_name:
#     site_template:
#     cert_type:
#     cert_path:
#     cert_privkey:
#     cert_san:
#     rootdir:
#     https_server_include:

harden_nginx_testing: false

hardennginx_reporting: true
hardennginx_reporting_template: nginx_report.sh
hardennginx_reporting_dest: /var/tmp
hardennginx_reporting_purge: 10

harden_nginx_ca_pull: false
harden_nginx_ca_pulldir: files

# mkcert
tmp_ssl_dir: /root
