---
# https://github.com/sensiolabs/security-checker
# https://github.com/sektioneins/pcc
# https://github.com/psecio/iniscan

- name: Ensure php is present
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items: "{{ harden_nginx_php }}"
  register: pkg_result
  until: pkg_result is success

- name: PHP | Configure default time
  ansible.builtin.replace:
    dest: "{{ harden_nginx_phpini | default(harden_nginx_phpdir + '/' + item + '/php.ini') }}"
    regexp: '^date.timezone = .*'
    replace: "date.timezone = '{{ harden_php_date_timezone }}'"
    mode: '0644'
  with_items: "{{ _harden_nginx_php_variants }}"

- name: PHP | Disable expose php
  ansible.builtin.replace:
    dest: "{{ harden_nginx_phpini | default(harden_nginx_phpdir + '/' + item + '/php.ini') }}"
    regexp: '^expose_php = .*'
    replace: "expose_php = {{ harden_php_expose_php }}"
    mode: '0644'
  with_items: "{{ _harden_nginx_php_variants }}"

- name: PHP | Disable url_fopen
  ansible.builtin.replace:
    dest: "{{ harden_nginx_phpini | default(harden_nginx_phpdir + '/' + item + '/php.ini') }}"
    regexp: '^allow_url_fopen = .*'
    replace: "allow_url_fopen = {{ harden_php_allow_url_fopen }}"
    mode: '0644'
  with_items: "{{ _harden_nginx_php_variants }}"

- name: PHP | Disable many dangerous functions
  ansible.builtin.replace:
    dest: "{{ harden_nginx_phpini | default(harden_nginx_phpdir + '/' + item + '/php.ini') }}"
    regexp: '^disable_functions =.*'
    replace: "disable_functions = {{ harden_php_disable_functions }}"
    mode: '0644'
  with_items: "{{ _harden_nginx_php_variants }}"

- name: PHP | Memory limit
  ansible.builtin.replace:
    dest: "{{ harden_nginx_phpini | default(harden_nginx_phpdir + '/' + item + '/php.ini') }}"
    regexp: '^memory_limit = .*'
    replace: "memory_limit = {{ harden_php_memory_limit }}"
    mode: '0644'
  with_items: "{{ _harden_nginx_php_variants }}"

- name: PHP | Include path
  ansible.builtin.lineinfile:
    dest: "{{ harden_nginx_phpini | default(harden_nginx_phpdir + '/' + item + '/php.ini') }}"
    regexp: '^include_path = .*'
    line: "include_path = {{ harden_php_include_path }}"
    mode: '0644'
  with_items: "{{ _harden_nginx_php_variants }}"

- name: PHP | session.use_strict_mode
  ansible.builtin.replace:
    dest: "{{ harden_nginx_phpini | default(harden_nginx_phpdir + '/' + item + '/php.ini') }}"
    regexp: '^session.use_strict_mode = .*'
    replace: "session.use_strict_mode = {{ harden_php_session_use_strict_mode }}"
    mode: '0644'
  with_items: "{{ _harden_nginx_php_variants }}"

- name: PHP | session.cookie_secure
  ansible.builtin.lineinfile:
    dest: "{{ harden_nginx_phpini | default(harden_nginx_phpdir + '/' + item + '/php.ini') }}"
    regexp: '^session.cookie_secure =.*'
    line: "session.cookie_secure = {{ harden_php_session_cookie_secure }}"
    mode: '0644'
  with_items: "{{ _harden_nginx_php_variants }}"

- name: PHP | session.cookie_httponly
  ansible.builtin.replace:
    dest: "{{ harden_nginx_phpini | default(harden_nginx_phpdir + '/' + item + '/php.ini') }}"
    regexp: '^session.cookie_httponly =.*'
    replace: "session.cookie_httponly = {{ harden_php_session_cookie_httponly }}"
    mode: '0644'
  with_items: "{{ _harden_nginx_php_variants }}"

- name: PHP | open_basedir
  ansible.builtin.replace:
    dest: "{{ harden_nginx_phpini | default(harden_nginx_phpdir + '/' + item + '/php.ini') }}"
    regexp: '^open_basedir = .*'
    replace: "open_basedir = {{ harden_php_openbasedir }}"
    mode: '0644'
  with_items: "{{ _harden_nginx_php_variants }}"

# - import_tasks: php7-snuffleupagus.yml
#   when: >
#     (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 16) and
#     harden_php7_snuffleupagus

- name: Ensure php-fpm systemd override folder exists
  ansible.builtin.file:
    dest: "/etc/systemd/system/{{ phpfpm_svc }}.service.d"
    state: directory
    mode: '0755'

- name: Review php-fpm systemd options
  ansible.builtin.template:
    src: systemd-override-php-fpm.conf.j2
    dest: "/etc/systemd/system/{{ phpfpm_svc }}.service.d/override.conf"
    mode: '0644'
  notify:
    - Reload systemd
    - Restart php-fpm
