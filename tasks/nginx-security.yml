---

- name: Restrict permissions on nginx configuration dir
  ansible.builtin.file:
    dest: "/etc/nginx"
    mode: "0750"
    state: "directory"
    owner: "root"
    group: "{{ www_user }}"
- name: Restrict permissions on few nginx configuration files
  ansible.builtin.file:
    dest: "{{ item }}"
    mode: "0640"
    state: "file"
    owner: "root"
    group: "{{ www_user }}"
    follow: "yes"
  with_items:
    - /etc/nginx/nginx.conf

- name: HTTP Public Key Pinning (HPKP) hash extraction
  ansible.builtin.shell: |
    set -o pipefail
    openssl req -in {{ ssl_dir }}/{{ ansible_fqdn }}.csr -pubkey -noout |
      openssl rsa -pubin -outform der |
      openssl dgst -sha256 -binary |
      openssl enc -base64
  args:
    executable: /bin/bash
  register: hardenwebserver_cert_pinning_value
  changed_when: false
  when: harden_nginx_hpkp_enable

- name: Nginx configuration file update
  ansible.builtin.template:
    src: "harden-cache"
    dest: "{{ apache_confdir }}/harden-cache"
    owner: "0"
    group: "0"
    mode: "0644"

- name: Review nginx main configuration
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ apache_confdir }}/{{ item }}{{ nginx_conf_suffix }}"
    mode: '0644'
  with_items:
    - harden-nginx-server
    - harden-nginx-gzip

## centos7 = nginx 1.12. location" directive is not allowed here in /etc/nginx/conf.d/harden-nginx-limit_req.conf
- name: Enable nginx limit_req - nginx-full only
  ansible.builtin.template:
    src: harden-nginx-limit_req.j2
    dest: "{{ apache_confdir }}/../harden-nginx-limit_req"
    mode: '0644'
  when: >
    hardenwebserver_nginx_debian_pkg == 'nginx-full' or
    (ansible_os_family == 'RedHat' and ansible_distribution_major_version | int > 7)

- name: Ensure extra configs are present
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ apache_confdir }}/../{{ item.name }}{{ nginx_conf_suffix }}"
    mode: '0644'
  notify:
    - Restart nginx
  with_items: "{{ hardenwebserver_nginx_https_server_include }}"

- name: Harden template for tls servers, common, fastcgi
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ apache_confdir }}/../{{ item }}"
    mode: '0644'
  with_items:
    - harden-nginx-https
    - harden-nginx-common
    - harden-nginx-fastcgi_params

- name: Import certificate-selfsigned
  ansible.builtin.import_tasks: certificate-selfsigned.yml
  when: hardenwebserver_cert is defined and hardenwebserver_cert == 'selfsigned'

## size should be >= certificate key size
- name: Generate ssl dhparam key
  # command: "openssl dhparam -out {{ ssl_privatedir }}/dhparam4.pem 4096 creates=/etc/nginx/ssl/dhparam4.pem"
  ansible.builtin.command: >
    openssl dhparam -dsaparam -out {{ ssl_privatedir }}/dhparam4.pem 4096
  args:
    creates: "{{ ssl_privatedir }}/dhparam4.pem"
- name: Ensure good permissions for ssl dhparam key
  ansible.builtin.file:
    dest: "{{ ssl_privatedir }}/dhparam4.pem"
    mode: "0440"
    owner: "root"
    group: "{{ www_user }}"

## when using letsencrypt, http verification implies default/http site to be available
##  and disable https to ensure no start error
- name: Debian | letsencrypt verification prepare
  when: >
    hardenwebserver_cert is defined and
    hardenwebserver_cert == 'letsencrypt' and
    (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  block:
    - name: Debian | nginx check default site present
      ansible.builtin.file:
        src: "{{ apachedefault }}"
        dest: /etc/nginx/sites-enabled/default
        mode: '0644'
        state: link
      notify:
        - Restart nginx
    - name: Debian | nginx disable https during letsencrypt validation
      ansible.builtin.file:
        dest: "/etc/nginx/sites-enabled/https"
        state: absent
      notify:
        - Restart nginx
    - name: Debian | ensure no redirect http to https - letsencrypt
      ansible.builtin.lineinfile:  # noqa no-tabs
        dest: /etc/nginx/sites-available/default
        regexp: "^\treturn 301 https://\\$host\\$request_uri;"
        state: absent
      notify:
        - Restart nginx
- name: RedHat | letsencrypt verification prepare
  when: hardenwebserver_cert is defined and hardenwebserver_cert == 'letsencrypt' and (ansible_os_family == 'RedHat')
  block:
    - name: Redhat | ensure nginx default/http site present
      ansible.builtin.file:
        dest: "{{ apacheconf }}"
        mode: '0644'
        state: file
- name: Import certificate-letsencrypt
  ansible.builtin.import_tasks: certificate-letsencrypt.yml
  when: hardenwebserver_cert is defined and hardenwebserver_cert == 'letsencrypt'

- name: Debian | https
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  block:
    - name: Nginx https configuration
      ansible.builtin.template:
        src: https.j2
        dest: "{{ apache_sitedir }}/https"
        owner: '0'
        group: '0'
        mode: '0644'
      notify:
        - Restart nginx
    - name: Enable https
      ansible.builtin.file:
        src: "{{ apache_sitedir }}/https"
        dest: "/etc/nginx/sites-enabled/https"
        state: link
        mode: '0644'
      notify:
        - Restart nginx
      when: hardenwebserver_https_noconfig is not defined or not hardenwebserver_https_noconfig | bool

- name: Debian
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  block:
    - name: Debian | nginx remove default site
      ansible.builtin.file:
        dest: /etc/nginx/sites-enabled/default
        state: absent
      notify:
        - Restart nginx
      when: hardenwebserver_disable_http is defined and hardenwebserver_disable_http
    - name: Debian | nginx check default site present
      ansible.builtin.file:
        src: "{{ apache_sitedir }}/default"
        dest: /etc/nginx/sites-enabled/default
        mode: '0644'
        state: link
      notify:
        - Restart nginx
      when: hardenwebserver_disable_http is not defined or not hardenwebserver_disable_http
    - name: Debian | nginx redirect http to https
      ansible.builtin.lineinfile:  # noqa no-tabs
        dest: /etc/nginx/sites-available/default
        regexp: "^\treturn 301 https://$host$request_uri;"
        line: "\treturn 301 https://$host$request_uri;"
        mode: '0644'
        insertafter: "^\tlisten \\[::\\]:80 default_server;"
      when: hardenwebserver_http_redirect_to_https

- name: Nginx https configuration
  ansible.builtin.template:
    src: https.j2
    dest: "{{ apache_sitedir }}/https.conf"
    owner: '0'
    group: '0'
    mode: '0644'
  notify:
    - Restart nginx
  when: ansible_os_family == "RedHat"

- name: Import fail2ban
  ansible.builtin.import_tasks: fail2ban.yml
  when: hardennginx_fail2ban_enable
