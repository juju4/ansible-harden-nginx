---
# https://github.com/FiloSottile/mkcert

- name: Update ssl path for mkcert
  ansible.builtin.set_fact:
    ssl_privatedir: "/etc/ssl/private"
    ssl_dir: "/etc/ssl/certs"
    ssl_privkey: "/etc/ssl/private/{{ ansible_fqdn }}.key"
    ssl_crt: "/etc/ssl/certs/{{ ansible_fqdn }}.crt"
    ssl_fullchain: "/etc/ssl/certs/{{ ansible_fqdn }}.crt"

- name: Ensure mkcert packages dependencies are present
  ansible.builtin.apt:
    name: "{{ mkcert_deps }}"
    state: "present"
    update_cache: "yes"
    cache_valid_time: "3600"
  register: pkg_result
  until: pkg_result is success

# FIXME: integrity?
- name: Download mkcert
  ansible.builtin.get_url:
    url: "https://dl.filippo.io/mkcert/latest?for=linux/amd64"
    dest: /usr/local/bin/mkcert
    mode: 0755

- name: Ensure have local CA
  ansible.builtin.command:
    cmd: mkcert -install
  args:
    chdir: /root
    creates: /root/.local/share/mkcert/rootCA-key.pem
    # creates: /root/.local/share/mkcert/rootCA.pem

- name: Create new certificate for requested domain
  ansible.builtin.command:
    cmd: "mkcert {{ ansible_fqdn }} {{ alternate_dns | default('') }}"
  args:
    chdir: /root
    creates: "/root/{{ ansible_fqdn }}.pem"

- name: Copy certificate files to needed locations
  ansible.builtin.copy:
    src: "{{ item.s }}"
    dest: "{{ item.d }}"
    mode: "{{ item.m }}"
    remote_src: true
  loop:
    - { s: "/root/{{ ansible_fqdn }}.pem", d: "{{ hardenwebserver_ssl_cert | default(ssl_dir + '/' + ansible_fqdn + '.crt') }}", m: '0644' }
    - { s: "/root/{{ ansible_fqdn }}-key.pem", d: "{{ hardenwebserver_ssl_key | default(ssl_privatedir + '/' + ansible_fqdn + '.key') }}", m: '0600' }

- name: Retrieve output dir to orchestrator
  ansible.builtin.fetch:
    src: "{{ item }}"
    dest: "{{ harden_nginx_ca_pulldir }}/"
    mode: "0600"
  loop:
    - /root/.local/share/mkcert/rootCA-key.pem
    - /root/.local/share/mkcert/rootCA.pem
  when: harden_nginx_ca_pull | bool
