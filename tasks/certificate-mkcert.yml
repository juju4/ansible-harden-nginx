---
# https://github.com/FiloSottile/mkcert

- name: Update ssl path for mkcert
  ansible.builtin.set_fact:
    ssl_privatedir: "/etc/ssl/private"
    ssl_dir: "/etc/ssl/certs"
    ssl_privkey: "/etc/ssl/private/{{ site_server_name }}.key"
    ssl_crt: "/etc/ssl/certs/{{ site_server_name }}.crt"
    ssl_fullchain: "/etc/ssl/certs/{{ site_server_name }}.crt"
    tmp_ssl_crt: "{{ tmp_ssl_dir }}/{{ site_server_name }}.crt"
    tmp_ssl_key: "{{ tmp_ssl_dir }}/{{ site_server_name }}-key.pem"
    tmp_ssl_p12: "{{ tmp_ssl_dir }}/{{ site_server_name }}.p12"

- name: Ensure mkcert packages dependencies are present
  ansible.builtin.apt:
    name: "{{ mkcert_deps }}"
    state: "present"
    update_cache: "yes"
    cache_valid_time: "3600"
  register: pkg_result
  until: pkg_result is success

# FIXME: integrity?
- name: Download mkcert
  ansible.builtin.get_url:
    url: "https://dl.filippo.io/mkcert/latest?for=linux/amd64"
    dest: /usr/local/bin/mkcert
    mode: '0755'

- name: Ensure have local CA
  ansible.builtin.command:
    cmd: mkcert -install
  args:
    chdir: /root
    creates: /root/.local/share/mkcert/rootCA-key.pem
    # creates: /root/.local/share/mkcert/rootCA.pem

- name: Create new certificate for requested domain
  ansible.builtin.command:
    cmd: "mkcert -cert-file {{ tmp_ssl_crt }} -key-file {{ tmp_ssl_key }} -p12-file {{ tmp_ssl_p12 }} {{ site_server_name }} {{ alternate_dns | default('') }}"
  args:
    chdir: "{{ tmp_ssl_dir }}"
    creates: "{{ tmp_ssl_key }}"
  register: mkcert_create

- name: Debug | var mkcert_create
  ansible.builtin.debug:
    var: mkcert_create
    verbosity: 0

- name: Copy certificate files to needed locations
  ansible.builtin.copy:
    src: "{{ item.s }}"
    dest: "{{ item.d }}"
    mode: "{{ item.m }}"
    remote_src: true
  loop:
    - { s: "{{ tmp_ssl_crt }}", d: "{{ hardenwebserver_ssl_cert | default(ssl_dir + '/' + site_server_name + '.crt') }}", m: '0644' }
    - { s: "{{ tmp_ssl_key }}", d: "{{ hardenwebserver_ssl_key | default(ssl_privatedir + '/' + site_server_name + '.key') }}", m: '0600' }

- name: Retrieve output dir to orchestrator
  ansible.builtin.fetch:
    src: "{{ item }}"
    dest: "{{ harden_nginx_ca_pulldir }}/"
    mode: "0600"
  loop:
    - /root/.local/share/mkcert/rootCA-key.pem
    - /root/.local/share/mkcert/rootCA.pem
  when: harden_nginx_ca_pull | bool
