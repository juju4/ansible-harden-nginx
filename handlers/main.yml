---

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes
  when: >
    not (ansible_virtualization_type is defined and (ansible_virtualization_type == "docker"))

- name: Restart nginx
  ansible.builtin.systemd:
    name: nginx
    state: restarted
  when: >
    not (ansible_virtualization_type is defined and (ansible_virtualization_type == "docker"))

- name: Add public file to www dir to fulfill letsencrypt challenge
  ansible.builtin.copy:
    dest: "{{ hardenwebserver_rootdir | default(_hardenwebserver_rootdir) }}/{{ le_challenge['challenge_data'][item.key]['http-01']['resource'] }}"
    content: "{{ le_challenge['challenge_data'][item.key]['http-01']['resource_value'] }}"
    mode: '0644'
  # if SAN has multiple entries, each one has a different challenge and must be validated
  loop: "{{ le_challenge['challenge_data'] | dict2items }}"

- name: Restart fail2ban
  ansible.builtin.service:
    name: fail2ban
    state: restarted
  when: not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")

- name: Restart php-fpm
  ansible.builtin.systemd:
    name: "{{ phpfpm_svc }}"
    state: restarted
  when: >
    not (ansible_virtualization_type is defined and (ansible_virtualization_type == "docker"))
