---

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes
  become: true
  become_user: root
  when: >
    not (ansible_virtualization_type is defined and (ansible_virtualization_type == "docker"))

- name: Copy certificate files to needed locations
  ansible.builtin.copy:
    src: "{{ item.s }}"
    dest: "{{ item.d }}"
    mode: "{{ item.m }}"
    remote_src: true
  loop:
    - { s: "/root/{{ site_server_name }}.crt", d: "{{ hardenwebserver_ssl_cert | default(ssl_fullchain) }}", m: '0644' }
    - { s: "/root/{{ site_server_name }}.key", d: "{{ hardenwebserver_ssl_key | default(ssl_privkey) }}", m: '0600' }

- name: Restart nginx
  ansible.builtin.systemd:
    name: nginx
    state: restarted
  when: >
    not (ansible_virtualization_type is defined and (ansible_virtualization_type == "docker"))

- name: Add public file to www dir to fulfill letsencrypt challenge
  ansible.builtin.copy:
    dest: "{{ hardenwebserver_rootdir | default(_hardenwebserver_rootdir) }}/{{ le_challenge['challenge_data'][item.key]['http-01']['resource'] }}"
    content: "{{ le_challenge['challenge_data'][item.key]['http-01']['resource_value'] }}"
    mode: '0644'
  # if SAN has multiple entries, each one has a different challenge and must be validated
  loop: "{{ le_challenge['challenge_data'] | dict2items }}"

- name: Restart fail2ban
  ansible.builtin.service:
    name: fail2ban
    state: restarted
  when: not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")

- name: Restart php-fpm
  ansible.builtin.systemd:
    name: "{{ phpfpm_svc }}"
    state: restarted
  when: >
    not (ansible_virtualization_type is defined and (ansible_virtualization_type == "docker"))

- name: Add to /etc/ca-certificates.conf
  ansible.builtin.lineinfile:
    path: /etc/ca-certificates.conf
    line: "{{ hardenwebserver_acme_download_root_ca_url | basename }}"
    mode: '0644'
    owner: root

- name: Update-ca-certificates
  ansible.builtin.command:  # noqa no-changed-when
    cmd: update-ca-certificates
  become: yes
  become_user: root
